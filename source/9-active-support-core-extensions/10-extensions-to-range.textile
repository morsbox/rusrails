h1. Расширения для Range

h4. +to_s+

Active Support расширяет метод +Range#to_s+ так, что он понимает необязательный аргумент формата. В настоящий момент имеется только один поддерживаемый формат, отличный от дефолтного, это +:db+:

<ruby>
(Date.today..Date.tomorrow).to_s
# => "2009-10-25..2009-10-26"

(Date.today..Date.tomorrow).to_s(:db)
# => "BETWEEN '2009-10-25' AND '2009-10-26'"
</ruby>

Как изображено в примере, формат +:db+ создает SQL условие +BETWEEN+. Это используется Active Record в его поддержке интервальных значений в условиях.

NOTE: Определено в +active_support/core_ext/range/conversions.rb+.

h4. +step+

Active Support расширяет метод +Range#step+ так. что он может быть вызван без блока:

<ruby>
(1..10).step(2) # => [1, 3, 5, 7, 9]
</ruby>

Как показывает пример, в этом случае метод возвращает массив с соответствующими элементами.

NOTE: Опредедено в +active_support/core_ext/range/blockless_step.rb+.

h4. +include?+

Метод +Range#include?+ говорит, лежит ли некоторое значение между концами заданного экземпляра:

<ruby>
(2..3).include?(Math::E) # => true
</ruby>

Active Support расширяет этот метод так, что аргумент может также быть другим интервалом. В этом случае тестируется, принадлежат ли концы аргумента самому получателю:

<ruby>
(1..10).include?(3..7)  # => true
(1..10).include?(0..7)  # => false
(1..10).include?(3..11) # => false
(1...9).include?(3..9)  # => false
</ruby>

WARNING: Оригинальный +Range#include?+ все еще псевдоним +Range#===+.

NOTE: Определено в +active_support/core_ext/range/include_range.rb+.

h4. +overlaps?+

Метод +Range#overlaps?+ говорит, имеют ли два заданных интервала непустое пересечение:

<ruby>
(1..10).overlaps?(7..11)  # => true
(1..10).overlaps?(0..7)   # => true
(1..10).overlaps?(11..27) # => false
</ruby>

NOTE: Определено в +active_support/core_ext/range/overlaps.rb+.
